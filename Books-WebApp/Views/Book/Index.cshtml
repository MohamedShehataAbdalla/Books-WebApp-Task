@model IEnumerable<Books_WebApp.Models.Book>

@{
    ViewBag.Title = "Index";
}

<h2 class="text-primary">Books</h2>
<hr />
<p>
    <a href="@Url.Action("Create", "Book")" class="btn btn-primary my-4"><i class="icofont-duotone icofont-plus-circle"></i> Add New</a>
</p>

<span id="Message" class="d-none">@TempData["Message"]</span>


<div class="alert alert-warning @(Model.Any() ? "d-none" : "")">
    No books added yet!
</div>


<table class="table table-striped table-hover @(!Model.Any() ? "d-none" : "")">
    <thead>
        <tr>
            <th style="max-width: 250px; width: 250px; ">
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th style="max-width: 180px; width: 180px; " class="text-center">
                @Html.DisplayNameFor(model => model.Author)
            </thstyle="max-width:>
            <th style="max-width: 180px; width: 180px; " class="text-center">
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th style="max-width: 150px; width: 150px; " class="text-center">
                @Html.DisplayNameFor(model => model.CategoryId)
            </th>
            <th style="max-width: 170px; width: 170px; " class="text-center">Action</th>
        </tr>
    </thead>
    <tbody class="table-group-divider">

        @foreach (var item in Model)
        {
            <tr class="align-middle">
                <td>
                    @Html.ActionLink(item.Title, "Details", "Book", new { id = item.Id }, null)
                </td>
                <td>
                    @{
                        var description = item.Description;
                        var summary = description.Substring(0, Math.Min(item.Description.Length, 85));
                    }
                    @((summary.Length <= 80) ? @summary : @summary + "...")
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Categories.Name)
                </td>
                <td class="text-center">
                    <a href="@Url.Action("Edit", "Book", new { id = item.Id })" class="btn btn-warning btn-sm">
                        <i class="icofont-duotone icofont-pencil"></i> Edit
                    </a>
                    <a href="javascript:;" class="btn btn-danger btn-sm js-delete" data-id="@item.Id">
                        <i class="icofont-duotone icofont-purge"></i> Delete
                    </a>
                </td>
            </tr>
        }

    </tbody>
</table>

@section Scripts
{
    <script>
        $(document).ready(function () {

            toastr.options = {
                "preventDuplicates": true
            }

            var message = $('#Message').text();
            if (message !== '') {
                toastr.success(message);
            }

            $('.js-delete').on('click', function () {
                var btn = $(this);

                bootbox.confirm({
                    message: "Are you sure that you need to delete this book?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-outline-secondary'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: '/api/book/' + btn.data('id'),
                                method: 'DELETE',
                                success: function () {

                                    if ($('tbody tr').length === 1)
                                        $('table').fadeOut(function () {
                                            this.remove();
                                            $('.alert').removeClass('d-none');
                                        });

                                    else
                                        btn.parents('tr').fadeOut(function () {
                                            this.remove();
                                        });

                                    toastr.success('Book deleted');
                                },
                                error: function () {
                                    toastr.error('Something went wrong!');
                                }
                            });
                        }
                    }
                });
            });
        });
    </script>
}